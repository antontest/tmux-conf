# cat << ►_◄ > /dev/null
# -- general -------------------------------------------------------------------
#-- base --#
set-option -g default-shell /bin/bash
set -g display-time 3000
set -g history-limit 65535

set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 0                      # fastest command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s quiet on                           # disable various messages

set -g prefix2 C-x                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

setw -g utf8 on
set -g status-utf8 on                     # expect UTF-8
set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------
set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows
setw -g automatic-rename on # rename window to reflect current program

# renumber windows when a window is closed
set -g renumber-windows on
set -g set-titles on                        # set terminal title
set-option -g set-titles-string '#{pane_current_command}'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

# 24 hour clock
setw -g clock-mode-style 24

# clear both screen and history
# bind -n C-c send-keys C-l \; run 'tmux clear-history'

# activity
set -g monitor-activity on
set -g visual-activity off

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# window title:
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I.#P] #W'
set-window-option -g automatic-rename on

# -- navigation ----------------------------------------------------------------
# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Space last-window      # move to last active window


bind m run "cut -c3- ~/.tmux.conf | sh -s toggle_mouse 2&>/dev/null"
# toggle mouse
# ►_◄
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# toggle_mouse() {
#   if (tmux show -g -w |grep -q mode-mouse); then
#     old=$(tmux show -g -w | grep mode-mouse | cut -d' ' -f2)
#     new=""
#
#     if [ "$old" = "on" ] ; then
#       new="off"
#     else
#       new="on"
#     fi
#
#     tmux set -g mode-mouse $new \;\
#          set -g mouse-resize-pane $new \;\
#          set -g mouse-select-pane $new \;\
#          set -g mouse-select-window $new \;\
#          display "mouse: $new"
#   else
#     old=$(tmux show -g | grep mouse | head -n 1 | cut -d' ' -f2)
#     new=""
#
#     if [ "$old" = "on" ] ; then
#       new="off"
#     else
#       new="on"
#     fi
#
#     tmux set -g mouse $new \;\
#          display "mouse: $new"
#   fi
# }
# $@


# -- list choice ---------------------------------------------------------------
bind -t vi-choice h tree-collapse
bind -t vi-choice l tree-expand
run 'tmux bind -t vi-choice K start-of-list 2&> /dev/null'
run 'tmux bind -t vi-choice J end-of-list 2&> /dev/null'
bind -t vi-choice H tree-collapse-all
bind -t vi-choice L tree-expand-all
bind -t vi-choice Escape cancel

# -- edit mode -----------------------------------------------------------------
# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind -ct vi-edit H start-of-line
bind -ct vi-edit L end-of-line
bind -ct vi-edit q cancel
bind -ct vi-edit Escape cancel

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

#-- key bind --#
unbind '"'
bind - splitw -v
unbind %
bind | splitw -h
bind C-a last
bind C-q killp

#交换两个窗格
bind u swapp -U
bind d swapp -D

#-- statusbar --#
set -g status-interval 1     # redraw status line every 10 seconds
set-option -g status-justify "centre"
set-option -g status-left-length 28
set-option -g status-right-length 90
setw -g automatic-rename on

# status bar colors etc 
set-option -g status-bg black 
set-option -g status-fg blue 
set-option -g status-interval 1 
set-option -g visual-activity on 
set-window-option -g monitor-activity on 
set-window-option -g window-status-current-fg white

# statusbar settings - adopted from tmuxline.vim and vim-airline - Theme: murmur
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour144,bg=colour237"
set -g status-right-style "none"
set -g pane-active-border-style "fg=colour27"
set -g status-utf8 "on"
set -g status-style "bg=colour234,none"
set -g message-style "fg=colour144,bg=colour237"
set -g pane-border-style "fg=colour237"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=colour27,bg=colour234,none"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour39,bg=colour234,none"
#set -g status-left "#[fg=colour15,bg=colour27] #S #[fg=colour27,bg=colour234,nobold,nounderscore,noitalics]"
#set -g status-right "#[fg=colour237,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour144,bg=colour237] %Y-%m-%d  %H:%M #[fg=colour27,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour15,bg=colour27] #h"
#setw -g window-status-format "#[fg=colour39,bg=colour234] #I #[fg=colour39,bg=colour234] #W"
#setw -g window-status-current-format "#[fg=colour234,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour144,bg=colour237] #I #[fg=colour144,bg=colour237] #{pane_current_path} #[fg=colour144,bg=colour237] #W #[fg=colour237,bg=colour234,nobold,nounderscore,noitalics]"

set-option -g status-left '#[fg=magenta] > #[fg=blue,nobold]#T #[fg=magenta]> #[default]'
set-option -g status-right '#[fg=magenta]>> #[fg=black,bold]###[fg=blue,bold]#S:#P #[fg=magenta,nobold]%a,%m-%d#[fg=white]|#[fg=green,bold]%j#[fg=white]|#[fg=blue,bold]%T#[default]'

set -g status-keys vi
setw -g mode-keys vi

# List of plugins
set -g @plugin 'plugins/tpm'
#set -g @plugin 'plugins/tmux-sensible'
set -g @plugin 'plugins/tmux-resurrect'
#set -g @plugin 'plugins/tmux-continuum'

# config
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
#run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
#set -g @continuum-save-interval '60'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

